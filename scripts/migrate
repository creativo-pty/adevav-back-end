#!/usr/bin/env node

'use strict';

const migration = require('../lib/migrations');
const program = require('commander');
const bunyan = require('bunyan');
const loggerConfig = require('../config/logs').options;

const log = bunyan.createLogger(loggerConfig);

// define options
program.version('0.1.0')
.option('-u, --up', 'Run pending migrations')
.option('-d, --down', 'Revert to the previous migration')
.option('-t, --to [migration_name]', 'Run/revert migrations of to given [migration_name]')
.parse(process.argv);

let action;
if (program.up) {
  action = migration.up;
} else if (program.down) {
  action = migration.down;
} else {
  log.info('No migrations performed.');
  return process.exit(0);
}

const params = (program.to) ? {to: program.to} : null;

return action.call(migration, params)
.then((migrations) => {
  if (!migrations.length) {
    log.info('There are no pending migrations.');
  } else {
    log.info(`Ran ${migrations.length} migration${migrations.length > 1 ? 's' : ''} successfully.`);
  }
  return process.exit(0);
})
.catch((err) => {
  log.error(err.stack);
  return process.exit(1);
});
